"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const prifile_1 = require("../../service/prifile");
const rental_pb_1 = require("../../service/proto_gen/rental/rental_pb");
const trip_1 = require("../../service/trip");
const format_1 = require("../../utils/format");
const routing_1 = require("../../utils/routing");
const TripsStatusMap = new Map([
    [rental_pb_1.rental.v1.TripStatus.IN_PROGRESS, '进行中'],
    [rental_pb_1.rental.v1.TripStatus.FINISHED, '已完成'],
]);
const ProfileStatusMap = new Map([
    [rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED, '未认证'],
    [rental_pb_1.rental.v1.IdentityStatus.PENDING, '认证中'],
    [rental_pb_1.rental.v1.IdentityStatus.VERIFIED, '已认证'],
]);
Page({
    scrollStates: {
        mainItem: [],
    },
    layoutResolver: undefined,
    data: {
        licStatus: ProfileStatusMap.get(rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED),
        tripsHeight: 0,
        avatarURL: '',
        trips: [],
        mainitem: [],
        navitem: [],
        mainscroll: '',
        navCount: 0,
        navSelect: '',
        navScroll: "x",
        promotionItems: [
            {
                img: 'https://img1.baidu.com/it/u=590110346,433709782&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=222',
                promotionId: 0,
            },
            {
                img: 'http://img.mp.itc.cn/upload/20160421/facaa82b67c342a78dc2e2f1f20c6381_th.jpg',
                promotionId: 1,
            },
            {
                img: 'https://m1.auto.itc.cn/c_zoom,w_270/29762096.JPG',
                promotionId: 3,
            },
            {
                img: 'http://t13.baidu.com/it/u=2792884273,1681992034&fm=224&app=112&f=JPEG?w=500&h=253',
                promotionId: 4,
            },
            {
                img: 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fdefaxingzheng.com%2FPublic%2Fuploads%2F5bea893335400.jpg&refer=http%3A%2F%2Fdefaxingzheng.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651671705&t=2cd5538942becbf53365b23807300bdc',
                promotionId: 5,
            }
        ]
    },
    onLoad() {
        const layoutReady = new Promise((resolve) => {
            this.layoutResolver = resolve;
        });
        Promise.all([trip_1.TripService.getTrips(), layoutReady]).then(([trips]) => {
            console.log("trips:", trips);
            this.populateTrips(trips.trips);
        });
        getApp().globalData.userInfo.then(userInfo => {
            this.setData({
                avatarURL: userInfo.avatarUrl,
            });
        });
    },
    onShow() {
        prifile_1.ProfileService.getProfile().then(p => {
            this.setData({
                licStatus: ProfileStatusMap.get(p.identityStatus || 0),
            });
        });
    },
    onReady() {
        wx.createSelectorQuery().select('#heading')
            .boundingClientRect(rect => {
            const height = wx.getSystemInfoSync().windowHeight - rect.height;
            this.setData({
                tripsHeight: height,
                navCount: Math.round(height / 50),
            }, () => {
                if (this.layoutResolver) {
                    this.layoutResolver(rect);
                }
            });
        }).exec();
    },
    populateTrips(trips) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        const mainItem = [];
        const navItem = [];
        let navSelect = '';
        let prevNav = '';
        for (let i = 0; i < trips.length; i++) {
            const trip = trips[i];
            const mainId = 'main-' + i;
            const navId = 'nav-' + i;
            const shortId = (_a = trip.id) === null || _a === void 0 ? void 0 : _a.substring(trip.id.length - 6);
            if (!prevNav) {
                prevNav = navId;
            }
            const tripDate = {
                id: trip.id,
                shortId: '*****' + shortId,
                statar: ((_c = (_b = trip.trip) === null || _b === void 0 ? void 0 : _b.start) === null || _c === void 0 ? void 0 : _c.poiName) || '未知',
                end: '',
                duration: '',
                fee: '',
                distance: '',
                stutar: TripsStatusMap.get((_d = trip.trip) === null || _d === void 0 ? void 0 : _d.status) || '未知',
                inProgress: ((_e = trip.trip) === null || _e === void 0 ? void 0 : _e.status) === rental_pb_1.rental.v1.TripStatus.IN_PROGRESS,
            };
            const end = (_f = trip.trip) === null || _f === void 0 ? void 0 : _f.end;
            if (end) {
                tripDate.end = end.poiName || '未知';
                tripDate.distance = ((_g = end.kmDriven) === null || _g === void 0 ? void 0 : _g.toFixed(1)) + '公里';
                tripDate.fee = format_1.formatfee(end.feeCent || 0);
                const dur = format_1.formatDurtion((end.timestampSec || 0) - (((_j = (_h = trip.trip) === null || _h === void 0 ? void 0 : _h.start) === null || _j === void 0 ? void 0 : _j.timestampSec) || 0));
                tripDate.duration = `${dur.hh}时:${dur.mm}分:${dur.ss}秒`;
            }
            mainItem.push({
                id: mainId,
                navId: navId,
                navScrollId: prevNav,
                data: tripDate,
            });
            navItem.push({
                id: navId,
                mainId: mainId,
                label: shortId || '',
            });
            if (i === 0) {
                navSelect = navId;
            }
            prevNav = navId;
            for (let i = 0; i < this.data.navCount - 8; i++) {
                navItem.push({
                    id: '',
                    mainId: '',
                    label: '',
                });
            }
        }
        this.setData({
            mainItem,
            navItem,
            navSelect
        }, () => {
            this.prepareScroll();
        });
    },
    getchangePage() {
        wx.navigateTo({
            url: routing_1.routing.register(),
        });
    },
    onGetUserInfo(e) {
        console.log(e);
        const userInfo = e.detail.userInfo;
        getApp().resolveUserInfo(userInfo);
    },
    prepareScroll() {
        wx.createSelectorQuery().selectAll('.main-item').fields({
            id: true,
            dataset: true,
            rect: true,
        }).exec(res => {
            this.scrollStates.mainItem = res[0];
        });
    },
    onPromotionItemTap(e) {
        const promotionID = e.currentTarget.dataset.promotionId;
        if (promotionID) {
            console.log('claiming promotion', promotionID);
        }
    },
    onnavitemTap(e) {
        var _a, _b;
        const mainId = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.dataset.mainId;
        const navId = (_b = e.currentTarget) === null || _b === void 0 ? void 0 : _b.id;
        if (mainId && navId) {
            this.setData({
                mainscroll: mainId,
                navSelect: navId,
            });
        }
    },
    onMainScroll(e) {
        var _a, _b;
        console.log(e);
        const top = ((_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.offsetTop) + ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.scrollTop);
        if (top === undefined) {
            return;
        }
        const selItem = this.scrollStates.mainItem.find(Item => Item.top >= top);
        if (!selItem) {
            return;
        }
        this.setData({
            navSelect: selItem.dataset.navId,
            navScroll: selItem.dataset.navScrollId,
        });
    },
    onMianItemTap(e) {
        if (!e.currentTarget.dataset.tripInProgress) {
            console.log("拿不到:", e);
            return;
        }
        const tripId = e.currentTarget.dataset.tripId;
        if (tripId) {
            console.log(tripId);
            wx.navigateTo({
                url: routing_1.routing.driving({
                    trip_id: tripId,
                }),
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,